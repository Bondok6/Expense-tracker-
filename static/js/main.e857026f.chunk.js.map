{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpenseChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","valueHeight","maxValue","Math","round","style","height","label","Chart","allValues","dataPoints","dp","maximumValue","max","dataPoint","ExpenseChart","dataChart","expenses","exp","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","expenseEnteredData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e857026f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">ðŸ’²{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback \"> Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let valueHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    valueHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar \">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: valueHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\n\r\nconst Chart = (props) => {\r\n  const allValues = props.dataPoints.map((dp) => dp.value);\r\n  const maximumValue = Math.max(...allValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maximumValue}\r\n          label={dataPoint.label}\r\n        />)\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\n\r\nconst ExpenseChart = (props) => {\r\n\r\n  const dataChart = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Agu', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const exp of props.expenses) {\r\n    const expMonth = exp.date.getMonth();\r\n    dataChart[expMonth].value += exp.amount;\r\n  }\r\n\r\n  return (\r\n      <Chart dataPoints = {dataChart} />   \r\n  )\r\n}\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseFrom.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    // Send Data to NewExpense.jsx\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    // Clear Inputs\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={(e) => {\r\n              setEnteredTitle(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={(e) => {\r\n              setEnteredAmount(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={(e) => {\r\n              setEnteredDate(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions \">\r\n        <button> Add Expense </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseFrom from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (expenseEnteredData) => {\r\n    const expenseData = {\r\n      ...expenseEnteredData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // Send Data to App.js\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseFrom onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 5),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"New TV\",\r\n    amount: 799.49,\r\n    date: new Date(2021, 2, 12),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses(() => [expense, ...expenses]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}